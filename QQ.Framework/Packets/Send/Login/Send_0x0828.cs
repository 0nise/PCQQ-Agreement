using QQ.Framework.Utils;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace QQ.Framework.Packets.Send.Login
{
    public class Send_0x0828 : SendPacket
    {
        /// <summary>
        /// 构造函数
        /// </summary>
        /// <param name="byteBuffer"></param>
        /// <param name="User"></param>
        public Send_0x0828(QQUser User)
            : base(User)
        {
            Sequence = GetNextSeq();
            _secretKey = user.QQ_0828_rec_ecr_key;
            var _tlv_0105 = new ByteBuffer();
            _tlv_0105.Put(new byte[] { 0x01, 0x05, 0x00, 0x30 });
            _tlv_0105.Put(new byte[] { 0x00, 0x01, 0x01, 0x02, 0x00, 0x14, 0x01, 0x01, 0x00, 0x10 });
            _tlv_0105.Put(Util.RandomKey());
            _tlv_0105.Put(new byte[] { 0x00, 0x14, 0x01, 0x02, 0x00, 0x10 });
            _tlv_0105.Put(Util.RandomKey());
            user.QQ_tlv_0105 = _tlv_0105.ToByteArray();
            Command = QQCommand.Login0x0828;
        }

        protected override void PutHeader(ByteBuffer buf)
        {
            base.PutHeader(buf);
            buf.Put(new byte[] { 0x02, 0x00, 0x00, 0x00, 0x01, 0x2E, 0x01, 0x00, 0x00, 0x68, 0x52, 0x00, 0x30, 0x00, 0x3A });
            buf.Put(new byte[] { 0x00, 0x38 });
            buf.Put(user.QQ_0836_038Token);
        }
        /// <summary>
        /// 初始化包体
        /// </summary>
        /// <param name="buf">The buf.</param>
        protected override void PutBody(ByteBuffer buf)
        {
            user.QQ_PACKET_FIX1 = new byte[] { 0x1F, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x30, 0x00, 0x01 };
            user.QQ_PACKET_FIX2 = new byte[] { 0xB9, 0xED, 0xEF, 0xD7, 0xCD, 0xE5, 0x47, 0x96, 0x7A, 0xB5, 0x28, 0x34, 0xCA, 0x93, 0x6B, 0x5C };
            var Fix3 = new ByteBuffer();
            Fix3.Put(new byte[] { 0x00, 0x63, 0x3E, 0x00, 0x63, 0x02, 0x04, 0x03, 0x06, 0x02, 0x00, 0x04, 0x00 });
            Fix3.Put(new byte[] { 0x52, 0xD9, 0x00, 0x00, 0x00, 0x00, 0xA9, 0x58, 0x3E, 0x6D, 0x6D, 0x49, 0xAA, 0xF6, 0xA6, 0xD9, 0x33, 0x0A,
                0xE7, 0x7E, 0x36, 0x84, 0x03, 0x01, 0x00, 0x00, 0x68, 0x20, 0x15, 0x8B, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x03, 0x00, 0x07,
                0xDF, 0x00, 0x0A, 0x00, 0x0C, 0x00, 0x01, 0x00, 0x04, 0x00, 0x03, 0x00, 0x04, 0x20, 0x5C, 0x00 });
            Fix3.Put(user.MD5_32);
            Fix3.Put(new byte[] { 0x68 });

            buf.Put(new byte[] { 0x00, 0x07, 0x00, 0x88 });
            buf.Put(user.QQ_0836_088Token);
            buf.Put(new byte[] { 0x00, 0x0C, 0x00, 0x16, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 });
            buf.Put(user.ServerIp);
            buf.Put(user.QQ_PACKET_FIX1);
            buf.Put(new byte[] { 0x01, 0x92, 0xA5, 0xD2, 0x59 });
            buf.Put(new byte[] { 0x00, 0x10, 0x54, 0x2D, 0xCF, 0x9B, 0x60, 0xBF, 0xBB, 0xEC, 0x0D, 0xD4, 0x81, 0xCE, 0x36, 0x87, 0xDE,
                0x35, 0x02, 0xAE, 0x6D, 0xED, 0xDC, 0x00, 0x10 });
            buf.Put(user.QQ_PACKET_0836FIX);
            buf.Put(new byte[] { 0x00, 0x36, 0x00, 0x12, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00 });
            buf.Put(new byte[] { 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 });
            buf.Put(user.QQ_PACKET_0825DATA0);
            buf.Put(user.QQ_PACKET_0825DATA2);
            buf.PutLong(user.QQ);
            buf.Put(new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x22, 0x00, 0x01 });
            buf.Put(user.QQ_DeviceID);
            buf.Put(user.QQ_tlv_0105);
            buf.Put(new byte[] { 0x01, 0x0B, 0x00, 0x85, 0x00, 0x02 });
            buf.Put(user.QQ_PACKET_FIX2);
            buf.Put(Util.RandomKey(1));
            buf.Put(new byte[] { 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02 });
            buf.Put(Fix3.ToByteArray());
            buf.Put(new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x2D, 0x00, 0x06, 0x00, 0x01 });
            buf.Put(Util.IPStringToByteArray(Util.GetExternalIp()));
        }
    }
}
